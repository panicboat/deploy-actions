name: 'Git Push Action'
description: 'Create PR to target repository with specified file'
author: 'panicboat'

branding:
  icon: 'git-pull-request'
  color: 'blue'

inputs:
  source-file:
    description: 'Path to source file to push'
    required: true
  service-name:
    description: 'Service name for file organization'
    required: true
  environment:
    description: 'Environment name (develop, staging, production, etc.)'
    required: true
  target-repository:
    description: 'Target repository for file push (e.g., panicboat/generated-manifests)'
    required: true
  target-branch:
    description: 'Target branch for file push'
    required: false
    default: 'main'
  github-token:
    description: 'GitHub token with required permissions'
    required: true
  pr-number:
    description: 'Pull request number for source PR reference (optional)'
    required: false

outputs:
  pr-number:
    description: 'Created pull request number'
    value: ${{ steps.create-pr.outputs.pull-request-number }}
  has-changes:
    description: 'Whether changes were detected'
    value: ${{ steps.check-changes.outputs.has-changes }}
  validation-status:
    description: 'File validation status'
    value: ${{ steps.validate-file.outputs.status }}

runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      uses: actions/github-script@v7
      with:
        script: |
          const path = require('path');
          const validateInputs = require(path.join(process.env.GITHUB_ACTION_PATH, 'validate-inputs.js'));
          await validateInputs({ core, inputs: ${{ toJSON(inputs) }} });

    - name: Validate source file
      id: validate-file
      uses: actions/github-script@v7
      with:
        script: |
          const path = require('path');
          const validateFile = require(path.join(process.env.GITHUB_ACTION_PATH, 'validate-file.js'));
          await validateFile({ core, inputs: ${{ toJSON(inputs) }} });

    - name: Checkout target repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.target-repository }}
        token: ${{ inputs.github-token }}
        ref: ${{ inputs.target-branch }}
        path: generated-manifests

    - name: Configure Git for target repository
      shell: bash
      working-directory: generated-manifests
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Prepare target file
      id: prepare-file
      uses: actions/github-script@v7
      with:
        script: |
          const path = require('path');
          const prepareFile = require(path.join(process.env.GITHUB_ACTION_PATH, 'prepare-file.js'));
          await prepareFile({ core, inputs: ${{ toJSON(inputs) }} });
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}

    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.github-token }}
        path: target-repository
        commit-message: |
          auto: update ${{ inputs.service-name }} for ${{ inputs.environment }}

          Source PR: #${{ inputs.pr-number }}
          Commit: ${{ github.sha }}
        title: "auto: update ${{ inputs.service-name }} for ${{ inputs.environment }}"
        body: |
          Automated file update for ${{ inputs.service-name }} in ${{ inputs.environment }} environment.

          **Source Information:**
          - Repository: ${{ github.server_url }}/${{ github.repository }}
          - PR: [#${{ inputs.pr-number }}](${{ github.server_url }}/${{ github.repository }}/pull/${{ inputs.pr-number }})
          - Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          - Run ID: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - Generated by: ${{ github.actor }}

          **Changes:**
          - Updated: `${{ steps.prepare-file.outputs.target-file }}`
        branch: auto-update/${{ inputs.service-name }}-${{ inputs.environment }}-${{ github.sha }}
        base: ${{ inputs.target-branch }}
        labels: |
          environment:${{ inputs.environment }}
          service:${{ inputs.service-name }}
          auto-generated
        delete-branch: true
      continue-on-error: true

    - name: Check changes status and report results
      id: check-changes
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const path = require('path');
          const checkResults = require(path.join(process.env.GITHUB_ACTION_PATH, 'check-results.js'));
          await checkResults({
            core,
            inputs: ${{ toJSON(inputs) }},
            steps: {
              validateFile: {
                outcome: '${{ steps.validate-file.outcome }}',
                outputs: {
                  status: '${{ steps.validate-file.outputs.status }}'
                }
              },
              createPr: {
                outcome: '${{ steps.create-pr.outcome }}',
                outputs: {
                  'pull-request-number': '${{ steps.create-pr.outputs.pull-request-number }}',
                  'pull-request-url': '${{ steps.create-pr.outputs.pull-request-url }}'
                }
              }
            }
          });
