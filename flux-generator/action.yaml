name: 'FluxCD Manifest Generator (Ruby)'
description: 'Generate FluxCD manifests using Clean Architecture Ruby implementation'
author: 'panicboat'

branding:
  icon: 'package'
  color: 'blue'

inputs:
  github-token:
    description: 'GitHub token with contents: write permission'
    required: true
  repository-url:
    description: 'Git repository URL (auto-detected from GITHUB_REPOSITORY if not provided)'
    required: false
  environments:
    description: 'Target environments (comma-separated)'
    required: false
    default: 'develop,staging,production'
  resource-name:
    description: 'FluxCD resource name (default: auto-generated)'
    required: false
  target-namespace:
    description: 'Target namespace for Kustomization resources'
    required: false
  output-dir:
    description: 'Output directory for generated manifests'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout deploy-actions
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}
        repository: panicboat/deploy-actions
        path: deploy-actions

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.5'
        bundler-cache: true
        working-directory: deploy-actions/flux-generator

    - name: Generate FluxCD manifests
      id: generate
      shell: bash
      working-directory: ${{ github.workspace }}/deploy-actions/flux-generator
      env:
        REPOSITORY_URL: ${{ inputs.repository-url }}
        ENVIRONMENTS: ${{ inputs.environments }}
        RESOURCE_NAME: ${{ inputs.resource-name }}
        TARGET_NAMESPACE: ${{ inputs.target-namespace }}
        OUTPUT_DIR: ${{ inputs.output-dir }}
      run: |
        bundle exec ruby bin/generator generate \
          --repository-url $REPOSITORY_URL\
          --environments $(echo "$ENVIRONMENTS" | tr ',' ' ')\
          --resource-name $RESOURCE_NAME \
          --target-namespace $TARGET_NAMESPACE \
          --output-dir $OUTPUT_DIR
